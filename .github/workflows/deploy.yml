name: CI/CD Deploy FinTrack

on:
  push:
    branches:
      - main   # change if your main branch is different

jobs:
  # -------------------------------
  # 1. Build & Push Images
  # -------------------------------
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push client image
        run: |
          docker build \
            --build-arg VITE_CLERK_PUBLISHABLE_KEY=${{ secrets.CLERK_PUBLISHABLE_KEY }} \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/fintrack-client:latest ./client
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/fintrack-client:latest

      - name: Build and push server image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/fintrack-server:latest ./server
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/fintrack-server:latest

  # -------------------------------
  # 2. Deploy on EC2 (self-hosted)
  # -------------------------------
  deploy:
    needs: build   # runs only if build succeeds
    runs-on: [self-hosted, linux]   # ðŸ‘ˆ uses EC2 runner

    steps:
      - name: Deploy on EC2
        run: |
          echo "Stopping old containers..."
          docker stop fintrack-client fintrack-server || true
          docker rm fintrack-client fintrack-server || true

          echo "Removing old images to free space..."
          docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/fintrack-client:latest || true
          docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/fintrack-server:latest || true
          docker system prune -af || true

          echo "Ensuring Docker network exists..."
          docker network create fintrack-net || true

          echo "Pulling new images..."
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/fintrack-client:latest
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/fintrack-server:latest

          echo "Starting new containers..."
          docker run -d --name fintrack-server \
            --network fintrack-net \
            --network-alias server \
            --env-file /home/ubuntu/fintrack-server/.env \
            -p 3001:3001 \
            ${{ secrets.DOCKERHUB_USERNAME }}/fintrack-server:latest

          docker run -d --name fintrack-client \
            --network fintrack-net \
            -p 80:80 \
            ${{ secrets.DOCKERHUB_USERNAME }}/fintrack-client:latest

          echo "âœ… Deployment finished!"
